## Adapter CI-CD build template repository details
#BUILD_TEMPLATE_GIT_URL=ssh://git@stash.jda.com:7999/jcia/connect-adapter-build.git
#BUILD_TEMPLATE_GIT_BRANCH=develop
#BUILD_TEMPLATE_GIT_CREDENTIAL_ID=

######################################### CI properties  ################################################################## 

## Artifactory credentials
JFROG_CREDENTIAL_ID=
JFROG_INSTANCE_ID=jdasoftware
JFROG_ARTIFACT_PATH=connect-neo-adapter-local/com/by/connectinstaller/11


## Enable /disable debug logs on jenkins logs true/false
DEBUG=false

####Skip build failure on pytest testcase failure
SKIP_FAILURE_ON_PYTEST=true


## jenkins credential id which is access to git/stash repository
GIT_CREDENTIAL_ID=BY-Product-Development-SA
## Adapter git details
GIT_URL=https://github.com/BY-Product-Development/plat-con-neo-service.git

## Default branch
DEFAULT_BRANCH=develop
## Default adapter version
DEFAULT_VERSION=2022.1.0-0


# Build agent in which build has to run
BUILD_AGENT_CI=win02

# Deploy agent in which deploy pipeline has to run
BUILD_AGENT_CD=
# If build agent required per environment 
#BUILD_AGENT_CD_DEV=
#BUILD_AGENT_CD_TEST=

# Project adapter location under git. Default location adapter/
PROJECT_LOCATION=adapter


##BLACKDUCK project details
BLACKDUCK_PROJECT_NAME=platform-connect-neo-service
#Valid phases --detect.project.version.phase=ARCHIVED,DEPRECATED,DEVELOPMENT,PLANNING,PRERELEASE,RELEASED
BD_ADDITIONAL_ARGS=--detect.project.version.phase=DEVELOPMENT --detect.report.timeout=30000 --detect.risk.report.pdf=true  --detect.risk.report.pdf.path=.

##CHECKMARX project details
CHECKMARX_PROJECT_NAME=connect-neo-service
CHECKMARX_TEAM_PATH=\\CxServer\\SP\\JDA\\EDGE\\Adapter
CHECKMARX_CREDENTIAL_ID=8d03fb8b-3f00-4755-92a0-bc678e4c0da5
CHECKMARX_URL=https://checkmarx.blueyonder.com



### CI Pipeline details
# Adapter CI pipeline for single (CI-CD) pipeline
ADAPTER_CI_PIPELINE=connect-adapter-ci

# Generic webhook token for CI
#ADAPTER_CI_WEBHOOK_TOKEN=

###Email content for CI
## Eamil with space separate 
EMAIL_GROUP_CI=prashant.shekhar@blueyonder.com
EMAIL_SUBJECT_CI=[build]Connect Adapter CI Build [${BUILD_TIMESTAMP} : [${BUILD_STATUS}] 
EMAIL_CONTENT_CI=<b>Connect Adapter</b><br> Adapter code repository: ${GIT_URL} <br> Branch: ${branch} <br><br> Project: ${JOB_NAME} <br>Build Number: ${BUILD_NUMBER} <br> Build URL: ${BUILD_URL} <br> Build status: ${BUILD_STATUS} <br>
EMAIL_ENABLE_CI=true

###Email content for CD
EMAIL_GROUP_CD=
EMAIL_SUBJECT_CD=[build]Connect Adapter CD Build [${BUILD_TIMESTAMP} : [${BUILD_STATUS}] 
EMAIL_CONTENT_CD=<br><br>Connect Adapter CD Build <br><br> Project: ${JOB_NAME} <br>Build Number: ${BUILD_NUMBER} <br> Build URL: ${BUILD_URL} <br> Build status: ${BUILD_STATUS} <br> Build duration : ${BUILD_DURATION} <br> Build cause : ${BUILD_TRIGGER_BY} <br>
EMAIL_ENABLE_CD=false
EMAIL_FITNESSE_CD=false

###Email content for CICD
EMAIL_GROUP_CICD=
EMAIL_SUBJECT_CICD=[build]Connect Adapter CICD Build [${BUILD_TIMESTAMP} : [${BUILD_STATUS}] 
EMAIL_CONTENT_CICD=<b>Connect Adapter CICD </b><br> Adapter code repository: ${GIT_URL} <br> Branch: ${branch} <br><br> Project: ${JOB_NAME} <br>Build Number: ${BUILD_NUMBER} <br> Build URL: ${BUILD_URL} <br> Build status: ${BUILD_STATUS} <br> Build duration : ${BUILD_DURATION} <br> Build cause : ${BUILD_TRIGGER_BY} <br>
EMAIL_ENABLE_CICD=false
EMAIL_FITNESSE_CICD=false

## Nightly build build parameters
#CRON_CI=H 18 * * * %Build_Adapter=true;munit=true;PublishToExchange=true;OverrideExchangeAssert=true;BlackDuck=true;CheckMarx=true;TargetExchange=Release0TestActivity;version=2021.1.0-0-SNAPSHOT-NB-4;branch=develop
#CRON_CD=H 18 * * * %environment=DEV; infra=; Framework_Servers=serversvc; Framework_Applications=ms;adapter=true;action=redeploy
#CRON_CICD=H 18 * * * %branch=master;Build_Adapter=true;munit=false;PublishToExchange=false;OverrideExchangeAssert=false;version=2020.2.0-0;TargetExchange=SAP Adapter;ExchangeUser=;ExchangePassword=;environment=TEST;FrameworkDefault=false;AdapterServer=true;adapterconfigpush=false;adapterconfigupdate=false;adapter=false;REGRESSION_TEST=false;action=status

##Confluence Publish details of CI build
CONFLUENCE_ENABLE_PUBLISH_CI=false
#Confluence space name (Parent page name)
CONFLUENCE_SPACE_NAME_CI=
#Confluence page name 
CONFLUENCE_PAGE_CI=

######################################### CD properties  ################################################################## 
## CD Skip adapter version updates to take latest version changes on build
ADAPTER_SKIP_CONFIG_SETUP=false

# Adapter CD pipeline for single (CI-CD) pipeline
ADAPTER_CD_PIPELINE=connect-adapter-cd
# Generic webhook token for CD
#ADAPTER_CD_WEBHOOK_TOKEN=

# Adapter CI-CD pipeline
ADAPTER_CICD_PIPELINE=connect-adapter-cicd
# Generic webhook token for CICD
#ADAPTER_CICD_WEBHOOK_TOKEN=
# Resolve "expects class java.lang.String but received class hudson.util.Secret"
#PASSWORD_AS_PLAIN=true





# Configure infra node
#PRESETUP_NODES=java,python,directories,mulednscheck,certificate,splunkforwarder,activemq

##Environment files :CD
# Infra provision (java,python,directories,mulednscheck,certificate,splunkforwarder,activemq) (Optional)
#ENVIRONMENT_INFRA_DEV=connect-adapter/environment/DEV/Connect-infra-setup-v1.yml

# Framework environment file for DEV
#ENVIRONMENT_FW_DEV=connect-adapter/environment/DEV/Connect-FrameworkApplication-2021.1.0-0-http.yml
#Adapter environment file for DEV
#ENVIRONMENT_ADP_DEV=connect-adapter/environment/DEV/Connect-Adapter-template-http.yml

#ENVIRONMENT_FW_TEST=connect-adapter/environment/TEST/Connect-FrameworkApplication-2021.1.0-0-https.yml
#ENVIRONMENT_ADP_TEST=connect-adapter/environment/TEST/Connect-Adapter-template-https.yml

#ENVIRONMENT_FW_PSR=connect-adapter/environment/PSR/Connect-FrameworkApplication-2020.3.0-0-http.yml
#ENVIRONMENT_ADP_PSR=connect-adapter/environment/PSR/Connect-Adapter-template-http.yml

#ENVIRONMENT_FW_PENTEST=connect-adapter/environment/PENTEST/Connect-FrameworkApplication-2020.3.0-0-https.yml
#ENVIRONMENT_ADP_PENTEST=connect-adapter/environment/PENTEST/Connect-Adapter-template-https.yml

#BUILD_AGENT_CD_TEST=master
#BUILD_AGENT_CD_DEV=master
## Run installation with Ansible or local installation
ANSABLE_DEPLOY_MODE=true
#ANSABLE_DEPLOY_MODE_TEST=true
#ANSABLE_DEPLOY_MODE_DEV=true

## Install server as service 
SERVER_AS_SERVICE=false
#SERVER_AS_SERVICE_TEST=false
#SERVER_AS_SERVICE_DEV=false



## Credential id of VMs ,Skip if enabled no pass /provided password in environment file
#INFRA_VM_CRED_ID_TEST=
#FW_VM_CRED_ID_TEST=
#ADP_VM_CRED_ID_TEST=
##Password type is sshkey (or) password
#VM_CRED_TYPE_TEST=

#INFRA_VM_CRED_ID_DEV=
#FW_VM_CRED_ID_DEV=
#ADP_VM_CRED_ID_DEV=
##VM Password type is sshkey (or) password
#VM_CRED_TYPE_DEV=


## Fitnesse data
